// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgvector(map: "vector")]
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  name           String
  password       String
  create_at      DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  UplodadedFiles UplodadedFile[]

  @@map("users") // Renomeia a table para users, dentro do banco
}

// ----------------------------------------------------------

// Arquivo upado em bytes
model UplodadedFile {
  id          String @id @default(uuid())
  userOwner   User   @relation(fields: [userOwnerId], references: [id])
  userOwnerId String

  fileName String
  data     Bytes

  create_at           DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  FaissDocumentVector FaissDocumentVector[]

  @@map("uploaded_file")
}

// Arquivo em vetor Faiss (Descontinuado)
model FaissDocumentVector {
  id          String        @id @default(uuid())
  fileOwner   UplodadedFile @relation(fields: [fileOwnerId], references: [id])
  fileOwnerId String

  create_at  DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("faiss_documents")
}

// Arquivo PgVector
model DocumentVector {
  id        Int                    @id @default(autoincrement())
  embedding Unsupported("vector")?
  content   String?
  metadata  Json?

  create_at  DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("document_vector")
}
